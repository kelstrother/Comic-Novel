{"ast":null,"code":"var _jsxFileName = \"/Users/Kelpro/dev-projects/marvel/marvel-api/src/components/Characters.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport env from 'react-dotenv';\nimport md5 from 'md5';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Characters = () => {\n  _s();\n\n  const apiPublic = process.env.PUBLIC_KEY;\n  const apiPrivate = process.env.PRIVATE_KEY; // const apiPublic = `8b49042fc572b4e9a0840fbdf13027af`\n  // const apiPrivate = `84677788f58c4b22ecfdc7241674df92a3b8a513`;\n\n  const date = new Date();\n  const timeStamp = date.getTime();\n  console.log(timeStamp);\n  const hashString = timeStamp + apiPrivate + apiPublic;\n  let hash = md5(hashString);\n  const searchname = \"Thor\";\n  const apiUrl = `https://gateway.marvel.com/v1/public/characters?nameStartsWith=${searchname}&ts=${timeStamp}&apikey=${apiPublic}&hash=${hash}`;\n  console.log(apiUrl);\n  console.log(\"this is hash\", hash);\n  const [characters, setCharacters] = useState(null);\n  const getCharacters = useRef(() => {});\n\n  getCharacters.current = async () => {\n    const response = await fetch(apiUrl);\n    const data = await response.json();\n    setCharacters(data);\n    console.log(characters);\n  };\n\n  useEffect(() => {\n    getCharacters.current();\n  }, []);\n\n  const loaded = () => {\n    return characters.data.results.map((character, index) => {\n      const imgJoin = [`${character.thumbnail.path}`, `.`, `${character.thumbnail.extension}`];\n      const newImgString = imgJoin.join(\"\");\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title\",\n          children: character.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: newImgString,\n          alt: \"thumbnail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 16\n      }, this);\n    });\n  };\n\n  const loading = () => {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 10\n    }, this);\n  };\n\n  return characters ? loaded() : loading();\n};\n\n_s(Characters, \"17gtci0Qd6/y+U75TVhi5OFmces=\");\n\n_c = Characters;\nexport default Characters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Characters\");","map":{"version":3,"sources":["/Users/Kelpro/dev-projects/marvel/marvel-api/src/components/Characters.js"],"names":["React","useRef","useEffect","useState","env","md5","Characters","apiPublic","process","PUBLIC_KEY","apiPrivate","PRIVATE_KEY","date","Date","timeStamp","getTime","console","log","hashString","hash","searchname","apiUrl","characters","setCharacters","getCharacters","current","response","fetch","data","json","loaded","results","map","character","index","imgJoin","thumbnail","path","extension","newImgString","join","name","loading"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,GAAP,MAAgB,KAAhB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACtB,QAAMC,SAAS,GAAGC,OAAO,CAACJ,GAAR,CAAYK,UAA9B;AACA,QAAMC,UAAU,GAAGF,OAAO,CAACJ,GAAR,CAAYO,WAA/B,CAFsB,CAGtB;AACA;;AACA,QAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,QAAMC,SAAS,GAAGF,IAAI,CAACG,OAAL,EAAlB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACA,QAAMI,UAAU,GAAGJ,SAAS,GAAGJ,UAAZ,GAAyBH,SAA5C;AACA,MAAIY,IAAI,GAAGd,GAAG,CAACa,UAAD,CAAd;AACA,QAAME,UAAU,GAAG,MAAnB;AAEA,QAAMC,MAAM,GAAI,kEAAiED,UAAW,OAAMN,SAAU,WAAUP,SAAU,SAAQY,IAAK,EAA7I;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAYI,MAAZ;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BE,IAA5B;AAEA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BpB,QAAQ,CAAC,IAAD,CAA5C;AAEA,QAAMqB,aAAa,GAAGvB,MAAM,CAAC,MAAM,CAAE,CAAT,CAA5B;;AACGuB,EAAAA,aAAa,CAACC,OAAd,GAAwB,YAAY;AACjC,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACN,MAAD,CAA5B;AACA,UAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAN,IAAAA,aAAa,CAACK,IAAD,CAAb;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAYK,UAAZ;AACF,GALD;;AAOHpB,EAAAA,SAAS,CAAC,MAAM;AACbsB,IAAAA,aAAa,CAACC,OAAd;AACF,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMK,MAAM,GAAG,MAAM;AAClB,WACGR,UAAU,CAACM,IAAX,CAAgBG,OAAhB,CAAwBC,GAAxB,CAA4B,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AAC/C,YAAMC,OAAO,GAAG,CAAE,GAAEF,SAAS,CAACG,SAAV,CAAoBC,IAAK,EAA7B,EAAiC,GAAjC,EAAsC,GAAEJ,SAAS,CAACG,SAAV,CAAoBE,SAAU,EAAtE,CAAhB;AACA,YAAMC,YAAY,GAAGJ,OAAO,CAACK,IAAR,CAAa,EAAb,CAArB;AACA,0BACG;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACG;AAAI,UAAA,SAAS,EAAC,OAAd;AAAA,oBAAuBP,SAAS,CAACQ;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADH,eAEG;AAAK,UAAA,GAAG,EAAGF,YAAX;AAA0B,UAAA,GAAG,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,gBAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cADH;AAMF,KATD,CADH;AAYF,GAbD;;AAcA,QAAMG,OAAO,GAAG,MAAM;AACnB,wBACG;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH;AAGF,GAJD;;AAKA,SAAOpB,UAAU,GAAGQ,MAAM,EAAT,GAAcY,OAAO,EAAtC;AACF,CAlDD;;GAAMpC,U;;KAAAA,U;AAoDN,eAAeA,UAAf","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport env from 'react-dotenv'\nimport md5 from 'md5'\n\nconst Characters = () => {\n   const apiPublic = process.env.PUBLIC_KEY \n   const apiPrivate = process.env.PRIVATE_KEY\n   // const apiPublic = `8b49042fc572b4e9a0840fbdf13027af`\n   // const apiPrivate = `84677788f58c4b22ecfdc7241674df92a3b8a513`;\n   const date = new Date()\n   const timeStamp = date.getTime()\n   console.log(timeStamp)\n   const hashString = timeStamp + apiPrivate + apiPublic\n   let hash = md5(hashString)\n   const searchname = \"Thor\"\n\n   const apiUrl = `https://gateway.marvel.com/v1/public/characters?nameStartsWith=${searchname}&ts=${timeStamp}&apikey=${apiPublic}&hash=${hash}`;\n   console.log(apiUrl)\n   console.log(\"this is hash\", hash)\n\n   const [characters, setCharacters] = useState(null)\n\n   const getCharacters = useRef(() => {});\n      getCharacters.current = async () => {\n         const response = await fetch(apiUrl)\n         const data = await response.json()\n         setCharacters(data)\n         console.log(characters)\n      }\n\n   useEffect(() => {\n      getCharacters.current()\n   }, [])\n \n   const loaded = () => {\n      return (\n         characters.data.results.map((character, index) => {\n            const imgJoin = [`${character.thumbnail.path}`, `.`, `${character.thumbnail.extension}`]\n            const newImgString = imgJoin.join(\"\")\n            return (\n               <div className=\"container\">\n                  <h1 className=\"title\">{character.name}</h1>\n                  <img src={ newImgString } alt=\"thumbnail\" />\n               </div>\n            )\n         })\n      )\n   }\n   const loading = () => {\n      return (\n         <h1 className=\"loading\">Loading...</h1>\n      )\n   }\n   return characters ? loaded() : loading()\n} \n\nexport default Characters"]},"metadata":{},"sourceType":"module"}